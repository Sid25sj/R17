{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Downloads/R17/R17/my-app/src/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    email: \"\",\n    role: \"\"\n  });\n\n  const updateFormData = event => setFormData({ ...formData,\n    [event.target.name]: event.target.value\n  });\n\n  const {\n    fullName,\n    email,\n    role\n  } = formData;\n  const navigate = useNavigate();\n\n  let handleForm = e => {\n    console.log(\"the data : \" + JSON.stringify(formData)); // navigate(\"/TableShow\");\n    // //alert(fullName+' A form was submitted: ' + formData);\n    // fetch(\"http://localhost:3002/store\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-type\": \"application/json\",\n    //   },\n    //   // Converting  React formData to JSON and send it as the POST body\n    //   body: JSON.stringify(formData),\n    // }).then(function (response) {\n    //   console.log(response);\n    //   return response.json();\n    // });\n\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"header\",\n      to: \"/TableShow\",\n      children: \"Show Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: fullName,\n        onChange: e => updateFormData(e),\n        placeholder: \"Full name\",\n        type: \"text\",\n        name: \"fullName\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => updateFormData(e),\n        placeholder: \"Email address\",\n        type: \"email\",\n        name: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"role\",\n        value: role,\n        onChange: e => updateFormData(e),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Administrator\",\n          children: \"Administrator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Subscriber\",\n          children: \"Subscriber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Author\",\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Editor\",\n          children: \"Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Form, \"LQJ8aqMgHNhINkhXkRPIOsqQv0M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/sid/Downloads/R17/R17/my-app/src/Form.jsx"],"names":["React","useState","Link","useNavigate","Form","formData","setFormData","fullName","email","role","updateFormData","event","target","name","value","navigate","handleForm","e","console","log","JSON","stringify","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAO,WAAP;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AACvCM,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,IAAI,EAAE;AAHiC,GAAD,CAAxC;;AAMA,QAAMC,cAAc,GAAIC,KAAD,IACrBL,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,KAACM,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAFxB,GAAD,CADb;;AAMA,QAAM;AAAEP,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAkBC,IAAAA;AAAlB,MAA2BJ,QAAjC;AACA,QAAMU,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,MAAIa,UAAU,GAAIC,CAAD,IAAO;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcC,IAAI,CAACC,SAAL,CAAehB,QAAf,CAA1B,EADsB,CAEtB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAY,IAAAA,CAAC,CAACK,cAAF;AACD,GAlBD;;AAoBA,sBACE;AAAA,4BACA,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,EAAE,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAM,MAAA,QAAQ,EAAEN,UAAhB;AAAA,8BACE;AACE,QAAA,KAAK,EAAET,QADT;AAEE,QAAA,QAAQ,EAAGU,CAAD,IAAOP,cAAc,CAACO,CAAD,CAFjC;AAGE,QAAA,WAAW,EAAC,WAHd;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,IAAI,EAAC,UALP;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AACE,QAAA,KAAK,EAAET,KADT;AAEE,QAAA,QAAQ,EAAGS,CAAD,IAAOP,cAAc,CAACO,CAAD,CAFjC;AAGE,QAAA,WAAW,EAAC,eAHd;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cAVF,eAkBE;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,KAAK,EAAER,IAA3B;AAAkC,QAAA,QAAQ,EAAGQ,CAAD,IAAOP,cAAc,CAACO,CAAD,CAAjE;AAAsE,QAAA,QAAQ,MAA9E;AAAA,gCACA;AAAQ,UAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE;AAAQ,UAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,KAAK,EAAG,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAQ,UAAA,KAAK,EAAE,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAyBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAkCD,CAtED;;GAAMb,I;UAeaD,W;;;KAfbC,I;AAwEN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./App.css\";\n\nconst Form = () => {\n\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    email: \"\",\n    role :\"\"\n  });\n\n  const updateFormData = (event) =>\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n\n  const { fullName, email,role } = formData;\n  const navigate = useNavigate();\n  let handleForm = (e) => {\n    console.log(\"the data : \"+JSON.stringify(formData));\n    // navigate(\"/TableShow\");\n    // //alert(fullName+' A form was submitted: ' + formData);\n\n    // fetch(\"http://localhost:3002/store\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-type\": \"application/json\",\n    //   },\n    //   // Converting  React formData to JSON and send it as the POST body\n    //   body: JSON.stringify(formData),\n    // }).then(function (response) {\n    //   console.log(response);\n    //   return response.json();\n    // });\n\n    e.preventDefault();\n  };\n\n  return (\n    <>\n    <Link className=\"header\" to='/TableShow'>Show Data</Link>\n    <form onSubmit={handleForm}>\n      <input\n        value={fullName}\n        onChange={(e) => updateFormData(e)}\n        placeholder=\"Full name\"\n        type=\"text\"\n        name=\"fullName\"\n        required\n      />\n\n      <input\n        value={email}\n        onChange={(e) => updateFormData(e)}\n        placeholder=\"Email address\"\n        type=\"email\"\n        name=\"email\"\n        required\n      />\n      <select name=\"role\" value={role}  onChange={(e) => updateFormData(e)} required >\n      <option value=\"\">Select Role</option>\n        <option value=\"Administrator\">Administrator</option>\n        <option value = \"Subscriber\">Subscriber</option>\n        <option value=\"Author\">Author</option>\n        <option value =\"Editor\">Editor</option>\n      </select>\n      <button type=\"submit\">Submit</button>\n      {/* <button type=\"submit\">submit</button> */}\n      {/* <Link onClick={routerChange} to='/TableShow'>TableShow</Link> */}\n    </form>\n    </>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}