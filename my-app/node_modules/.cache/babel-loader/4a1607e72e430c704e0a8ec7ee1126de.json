{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Downloads/R17/my-app/src/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    email: \"\"\n  });\n\n  const updateFormData = event => setFormData({ ...formData,\n    [event.target.name]: event.target.value\n  });\n\n  const {\n    fullName,\n    email\n  } = formData;\n  const navigate = useNavigate();\n\n  let handleForm = e => {\n    navigate(\"/TableShow\"); //alert(fullName+' A form was submitted: ' + formData);\n\n    fetch(\"http://localhost:3001/store\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      // Converting  React formData to JSON and send it as the POST body\n      body: JSON.stringify(formData)\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    });\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleForm,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: fullName,\n      onChange: e => updateFormData(e),\n      placeholder: \"Full name\",\n      type: \"text\",\n      name: \"fullName\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      onChange: e => updateFormData(e),\n      placeholder: \"Email address\",\n      type: \"email\",\n      name: \"email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"cxk+P4k/3Zy/V1/xQv2Iz0QHD08=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/sid/Downloads/R17/my-app/src/Form.jsx"],"names":["React","useState","Link","useNavigate","Form","formData","setFormData","fullName","email","updateFormData","event","target","name","value","navigate","handleForm","e","fetch","method","headers","body","JSON","stringify","then","response","console","log","json","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAO,WAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AACvCM,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,KAAK,EAAE;AAFgC,GAAD,CAAxC;;AAKA,QAAMC,cAAc,GAAIC,KAAD,IACrBJ,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,KAACK,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAFxB,GAAD,CADb;;AAMA,QAAM;AAAEN,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBH,QAA5B;AACA,QAAMS,QAAQ,GAAGX,WAAW,EAA5B;;AACA,MAAIY,UAAU,GAAIC,CAAD,IAAO;AACtBF,IAAAA,QAAQ,CAAC,YAAD,CAAR,CADsB,CAEtB;;AAEAG,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF0B;AAKnC;AACAC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,QAAf;AAN6B,KAAhC,CAAL,CAOGkB,IAPH,CAOQ,UAAUC,QAAV,EAAoB;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,KAVD;AAYAX,IAAAA,CAAC,CAACY,cAAF;AACD,GAjBD;;AAmBA,sBACE;AAAM,IAAA,QAAQ,EAAEb,UAAhB;AAAA,4BACE;AACE,MAAA,KAAK,EAAER,QADT;AAEE,MAAA,QAAQ,EAAGS,CAAD,IAAOP,cAAc,CAACO,CAAD,CAFjC;AAGE,MAAA,WAAW,EAAC,WAHd;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,IAAI,EAAC,UALP;AAME,MAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AACE,MAAA,KAAK,EAAER,KADT;AAEE,MAAA,QAAQ,EAAGQ,CAAD,IAAOP,cAAc,CAACO,CAAD,CAFjC;AAGE,MAAA,WAAW,EAAC,eAHd;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,YAVF,eAkBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA1DD;;GAAMZ,I;UAcaD,W;;;KAdbC,I;AA4DN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./App.css\";\n\nconst Form = () => {\n\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    email: \"\",\n  });\n\n  const updateFormData = (event) =>\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n\n  const { fullName, email } = formData;\n  const navigate = useNavigate();\n  let handleForm = (e) => {\n    navigate(\"/TableShow\");\n    //alert(fullName+' A form was submitted: ' + formData);\n\n    fetch(\"http://localhost:3001/store\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      // Converting  React formData to JSON and send it as the POST body\n      body: JSON.stringify(formData),\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    });\n\n    e.preventDefault();\n  };\n\n  return (\n    <form onSubmit={handleForm}>\n      <input\n        value={fullName}\n        onChange={(e) => updateFormData(e)}\n        placeholder=\"Full name\"\n        type=\"text\"\n        name=\"fullName\"\n        required\n      />\n\n      <input\n        value={email}\n        onChange={(e) => updateFormData(e)}\n        placeholder=\"Email address\"\n        type=\"email\"\n        name=\"email\"\n        required\n      />\n      <button type=\"submit\">Submit</button>\n      {/* <button type=\"submit\">submit</button> */}\n      {/* <Link onClick={routerChange} to='/TableShow'>TableShow</Link> */}\n    </form>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}